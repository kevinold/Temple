# Controller generated by the `typus_amazon_s3` generator.
class Admin::NewslettersController < Admin::MasterController

  def generate
    newsletter = Newsletter.generate({:deliver_preview_link => false})
    if newsletter
      redirect_to :action => 'edit', :id => newsletter.id
    else
      flash[:notice] = "Not enough projects to generate a newsletter."
      redirect_to :back
    end
  end

  ##
  # At the end of the file we can add a link to aprove the newsletter
  #
  def preview
    @newsletter = Newsletter.find(params[:id])
    content = @newsletter.body
    render :text => content, :layout => "newsletters/#{@newsletter.template}"
  end

  ##
  # Aprove newsletter so we are able to send it.
  #
  def aprove
    @newsletter = Newsletter.find(params[:id])
    @newsletter.update_attributes :status => true
    flash[:notice] = "Newsletter aproved. Now you can deliver it."
    redirect_to :action => 'edit'
  end

  def deliver
    newsletter = Newsletter.find(params[:id])
    if newsletter.status
      ##
      # Here we get all the objects of the body_raw and update their 
      # attribute on_newsletter to false
      #
      newsletter.body_raw.each do |model|
        model.first.constantize.find(model.last).update_attributes :on_newsletter => false
        logger.info("=> Updated on_newsletter to false for #{model.first}##{model.last}")
      end
      newsletter.deliver
      subscribers = Subscriber.count(:conditions => { :status => 'subscribed' })
      flash[:notice] = "Newsletter sent to #{subscribers} subscribers."
    else
      flash[:error] = "Before sending a newsletter preview and aprove it."
    end
    redirect_to :action => 'edit', :id => params[:id]
  end

  ##
  # This method overwrites the Typus one!
  #
  def destroy
    if !@item.status
      @item.destroy
      flash[:success] = "#{@model.humanize} successfully removed."
    else
      flash[:notice] = "Cannot delete a published newsletter."
    end
    redirect_to :back
  rescue Exception => error
    error_handler(error, { :params => params.merge(:action => 'index', :id => nil) })
  end

end